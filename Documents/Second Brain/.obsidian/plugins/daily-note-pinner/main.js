/*
THIS IS A GENERATED/BUNDLED FILE BY ESBUILD
if you want to view the source, please visit the github repository of this plugin
*/

var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);

// main.ts
var main_exports = {};
__export(main_exports, {
  default: () => DailyNotePinnerPlugin
});
module.exports = __toCommonJS(main_exports);
var import_obsidian = require("obsidian");
var dateRegex = /\d{4}-\d{2}-\d{2}/;
var DailyNotePinnerPlugin = class extends import_obsidian.Plugin {
  constructor() {
    super(...arguments);
    this.pinDailyNote = () => {
      const date = new Date();
      const year = date.getFullYear();
      const month = String(date.getMonth() + 1).padStart(2, "0");
      const day = String(date.getDate()).padStart(2, "0");
      const today = `${year}-${month}-${day}`;
      this.app.workspace.iterateRootLeaves((leaf) => {
        var _a, _b, _c;
        if (leaf.view instanceof import_obsidian.FileView && dateRegex.test((_b = (_a = leaf.view.file) == null ? void 0 : _a.basename) != null ? _b : "")) {
          const shouldBePinned = ((_c = leaf.view.file) == null ? void 0 : _c.basename) === today;
          if (leaf.pinned !== shouldBePinned) {
            leaf.setPinned(shouldBePinned);
          }
        }
      });
    };
  }
  async onload() {
    this.registerEvent(
      this.app.workspace.on("file-open", this.pinDailyNote)
    );
    this.pinDailyNote();
  }
};

/* nosourcemap */